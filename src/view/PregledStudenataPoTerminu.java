/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.TerminController;
import controller.UsersController;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Kolegij;
import model.Termin;
import model.Users;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Admin
 */
public class PregledStudenataPoTerminu extends javax.swing.JDialog {

    UsersController controller = new UsersController();
    TerminController controller1 = new TerminController();
    DefaultListModel model=new DefaultListModel();
    
    


    public PregledStudenataPoTerminu(java.awt.Frame parent, boolean modal) throws Exception {
        super(parent, modal);
        initComponents();

    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbKolegiji = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cmbTermin = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pregled sudenata po terminu");

        cmbKolegiji.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbKolegijiItemStateChanged(evt);
            }
        });
        cmbKolegiji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKolegijiActionPerformed(evt);
            }
        });

        jLabel1.setText("Odaberite kolegij:");

        cmbTermin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTerminItemStateChanged(evt);
            }
        });

        jLabel2.setText("Odaberite termin:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbTermin, 0, 213, Short.MAX_VALUE)
                            .addComponent(cmbKolegiji, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(66, 66, 66))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbKolegiji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbTermin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int  asifra;

    public  void setSifra(int asifra){
        this.asifra=asifra;
    }
        

    
    private void cmbKolegijiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKolegijiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbKolegijiActionPerformed

    private void cmbKolegijiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbKolegijiItemStateChanged
    Kolegij odabrani = (Kolegij) cmbKolegiji.getSelectedItem();
        
    preuzimanjeTerminaPoKolegiju(odabrani.getSifra_kolegija());
    }//GEN-LAST:event_cmbKolegijiItemStateChanged

    private void cmbTerminItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTerminItemStateChanged
try {
            prikaziAStudenteUTablici();
        } catch (Exception ex) {
            Logger.getLogger(PregledStudenataPoTerminu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbTerminItemStateChanged

    
    public void preuzimanjeKoelgijaOdProfesora(int id) {
        
        cmbKolegiji.removeAllItems();
        List<Kolegij> lista;
        

        try {
            lista = (List<Kolegij>) controller.listaKolegijaOdProfesora(id);
            lista.stream().forEach((i) -> {
                cmbKolegiji.addItem(i);
            });
            System.out.println("DEBUG|DialogUnosTermina|preuzimanjeSvihKolegijaOdProfesora|USPJESAN");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Greška"+e, "Kritična Greška", JOptionPane.ERROR_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|PanelProfesor|preuzimanjeSvihKolegijaOdProfesora|Exception|" + e.toString());
            return;
        }

        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Niste nositelj niti jednog kolegija!!!!.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
            System.out.println("DEBUG|DialogUnosTermina|preuzimanjeSvihKolegijaOdProfesora|Prazna lista");
        }
    }
    
    private void preuzimanjeTerminaPoKolegiju(int id) {
        
        cmbTermin.removeAllItems();
        List<Termin> lista;
        

        try {
            lista = (List<Termin>) controller1.listaTerminaPoKolegiju(id);
            
            lista.stream().forEach((i) -> {
                cmbTermin.addItem(i);
            });
            System.out.println("DEBUG|GlavniIzbornik|PanelProfesor|preuzimanjeTerminaPoKolegiju|USPJESAN");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Greška"+e, "Kritična Greška", JOptionPane.ERROR_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|PanelProfesor|preuzimanjeTerminaPoKolegiju|Exception|" + e.toString());
            return;
        }

        if (lista.isEmpty()) {
            //JOptionPane.showMessageDialog(this, "Nema termina za taj kolegij!!!!.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|PanelProfesor|preuzimanjeTerminaPoKolegiju|Prazna lista|Nema termina za taj kolegij");
        }
    }
       
       
       private void prikaziAStudenteUTablici() throws Exception {
        String[] zaglavlje ={"#","Prezime","Ime","Broj iskaznice","Email"};
        Vector zaglavljeTablice = new Vector(Arrays.asList(zaglavlje));
        Vector popuniTablicu = new Vector();
       
        
        Kolegij odabraniKolegij = (Kolegij) cmbKolegiji.getSelectedItem();
        Termin odabraniTermin = (Termin) cmbTermin.getSelectedItem();
         
        
        int sifra_kolegija = odabraniKolegij.getSifra_kolegija();
        int termin = odabraniTermin.getSifra_termina();
        
        System.out.println("DEBUG|PregledStudenataPoTerminu|prikaziAStudenteUTablici|" + sifra_kolegija);
        System.out.println("DEBUG|PregledStudenataPoTerminu|prikaziAStudenteUTablici|" + termin);
        ArrayList<Users> lista;
 
        lista = (ArrayList<Users>) controller.listaEvidentiranihStudenata(termin, sifra_kolegija);
         int brojac =0;
        for (Users korisnik : lista){
            brojac++;
         Vector popuni = new Vector();
         popuni.addElement(brojac);
         popuni.addElement(korisnik.getPrezime());
         popuni.addElement(korisnik.getIme());
         popuni.addElement(korisnik.getBroj_iskaznice());
         popuni.addElement(korisnik.getEmail());
         popuniTablicu.add(popuni);
        
        }
        //lista.stream().map((korisnik) -> new Vector(Arrays.asList(korisnik.getPrezime(),korisnik.getIme(),korisnik.getBroj_iskaznice(),korisnik.getEmail()))).forEach(popuniTablicu::add);
        
        TableModel novi = new DefaultTableModel(popuniTablicu, zaglavljeTablice);
        System.out.println("DEBUG|GlavniIzbornik|popuniTablicu| "+popuniTablicu);
        jTable1.setModel(novi);
    
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PregledStudenataPoTerminu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PregledStudenataPoTerminu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PregledStudenataPoTerminu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PregledStudenataPoTerminu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    
                    PregledStudenataPoTerminu dialog = new PregledStudenataPoTerminu(new javax.swing.JFrame(), true);

                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(PregledStudenataPoTerminu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Kolegij> cmbKolegiji;
    private javax.swing.JComboBox<Termin> cmbTermin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
