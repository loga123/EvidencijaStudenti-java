/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.TerminController;
import controller.UsersController;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Kolegij;
import model.Termin;
import model.Users;
import com.codeminders.hidapi.*;
import controller.EvidencijaController;
import controller.KolegijController;
import controller.SQLController;
import controller.StudentNaKolegijuController;
import java.awt.Toolkit;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Vector;
import java.util.stream.Collectors;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Evidencija;
import model.StudentNaKolegiju;
/**
 *
 * @author Admin
 */
public class GlavniIzbornik extends javax.swing.JFrame {

    /**
     * Creates new form GlavniIzbornik
     */
    public GlavniIzbornik() throws Exception {
        initComponents();
        otvoriPocetnu();
        tfKorisnickoIme.setText("ipogarcic@veleri.hr");
        tfLozinka.setText("ipogarcic");
        setIcon();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        PanelPocetna = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfKorisnickoIme = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        tfLozinka = new javax.swing.JPasswordField();
        PanelAdmin = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel15 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        cmbKolegijiAdmin = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cmbTerminAdmin = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        PanelProfesor = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        PanelKonfiguracija = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        cmbKolegiji = new javax.swing.JComboBox<>();
        cmbTermin = new javax.swing.JComboBox<>();
        jRadioButtonKVjezbe = new javax.swing.JRadioButton();
        jRadioButtonKSeminar = new javax.swing.JRadioButton();
        jRadioButtonKPredavanje = new javax.swing.JRadioButton();
        jButtonKPotvrdi = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabelKStatusUredaja = new javax.swing.JLabel();
        jLabelStatusKBazePodataka = new javax.swing.JLabel();
        PanelEvidencija = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        atfBrojIskaznice = new javax.swing.JTextField();
        atfIme = new javax.swing.JTextField();
        atfPrezime = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jTextFieldCitacKartice = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList<>();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        PanelONama = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Evidencija studenata v. 1.0");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/POZADINA.png"))); // NOI18N
        jLabel1.setText("\n");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Prijava"));

        jLabel3.setText("Korisniƒçko ime:");

        tfKorisnickoIme.setText("mkaluza@veleri.hr");
        tfKorisnickoIme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfKorisnickoImeActionPerformed(evt);
            }
        });

        jLabel2.setText("Lozinka:");

        jButton1.setText("Prijava");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tfLozinka.setText("mkaluza");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfLozinka)
                            .addComponent(tfKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(173, 173, 173))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelPocetnaLayout = new javax.swing.GroupLayout(PanelPocetna);
        PanelPocetna.setLayout(PanelPocetnaLayout);
        PanelPocetnaLayout.setHorizontalGroup(
            PanelPocetnaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PanelPocetnaLayout.setVerticalGroup(
            PanelPocetnaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane2StateChanged(evt);
            }
        });
        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseClicked(evt);
            }
        });

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Operacije sa ≈°ifranicima"));

        jButton11.setText("TERMIN");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton10.setText("KOLEGIJ");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton12.setText("UNOS NOSITELJA ZA KOLEGIJ");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("POVEZIVANJE STUDENTA I KOLEGIJA");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(162, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("≈†ifranici", jPanel15);

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Kolegiji po profesoru"));

        jList3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList3.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList3ValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(jList3);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Pregled kolegija po profesoru", jPanel16);

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Pregled studenata po kolegiju"));

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList2ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jList2);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Pregled studenata po kolegiju", jPanel17);

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Kolegij-termin-studenti"));
        jPanel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel22MouseClicked(evt);
            }
        });

        cmbKolegijiAdmin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbKolegijiAdminItemStateChanged(evt);
            }
        });
        cmbKolegijiAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbKolegijiAdminMouseClicked(evt);
            }
        });

        jLabel13.setText("Odaberite Kolegij:");

        jLabel14.setText("Odaberite termin:");

        cmbTerminAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbTerminAdmin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTerminAdminItemStateChanged(evt);
            }
        });
        cmbTerminAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTerminAdminActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addGap(66, 66, 66)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbKolegijiAdmin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbTerminAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbKolegijiAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbTerminAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Pregled studenata po terminu", jPanel18);

        jPanel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel19MouseClicked(evt);
            }
        });

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Osnovni podatci korisnika"));

        jButton15.setText("Odjava");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Ime:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Prezime:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Email:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("Status:");

        jLabel20.setBackground(new java.awt.Color(0, 0, 153));
        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 153));

        jLabel21.setBackground(new java.awt.Color(0, 0, 153));
        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 153));

        jLabel22.setBackground(new java.awt.Color(0, 0, 153));
        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 153));

        jLabel23.setBackground(new java.awt.Color(0, 0, 153));
        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 153));

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Profil", jPanel19);

        javax.swing.GroupLayout PanelAdminLayout = new javax.swing.GroupLayout(PanelAdmin);
        PanelAdmin.setLayout(PanelAdminLayout);
        PanelAdminLayout.setHorizontalGroup(
            PanelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        PanelAdminLayout.setVerticalGroup(
            PanelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Konfiguracija"));

        cmbKolegiji.setEnabled(false);
        cmbKolegiji.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbKolegijiItemStateChanged(evt);
            }
        });

        cmbTermin.setEnabled(false);

        jRadioButtonKVjezbe.setText("Vjezbe");
        jRadioButtonKVjezbe.setEnabled(false);
        jRadioButtonKVjezbe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonKVjezbeActionPerformed(evt);
            }
        });

        jRadioButtonKSeminar.setText("Seminar");
        jRadioButtonKSeminar.setEnabled(false);
        jRadioButtonKSeminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonKSeminarActionPerformed(evt);
            }
        });

        jRadioButtonKPredavanje.setText("Predavanje");
        jRadioButtonKPredavanje.setEnabled(false);
        jRadioButtonKPredavanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonKPredavanjeActionPerformed(evt);
            }
        });

        jButtonKPotvrdi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/next.png"))); // NOI18N
        jButtonKPotvrdi.setText("Potvrdi");
        jButtonKPotvrdi.setEnabled(false);
        jButtonKPotvrdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKPotvrdiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jRadioButtonKPredavanje)
                        .addGap(52, 52, 52)
                        .addComponent(jRadioButtonKSeminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButtonKVjezbe))
                    .addComponent(cmbKolegiji, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTermin, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jButtonKPotvrdi, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(cmbKolegiji, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(cmbTermin, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonKPredavanje)
                            .addComponent(jRadioButtonKSeminar)
                            .addComponent(jRadioButtonKVjezbe)))
                    .addComponent(jButtonKPotvrdi, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Status ƒçitaƒça X-ica i baze podataka"));

        jButton2.setText("Test");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabelKStatusUredaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/cardOff.png"))); // NOI18N

        jLabelStatusKBazePodataka.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/databaseOff.png"))); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(jLabelKStatusUredaja, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelStatusKBazePodataka, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelKStatusUredaja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelStatusKBazePodataka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(0, 23, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout PanelKonfiguracijaLayout = new javax.swing.GroupLayout(PanelKonfiguracija);
        PanelKonfiguracija.setLayout(PanelKonfiguracijaLayout);
        PanelKonfiguracijaLayout.setHorizontalGroup(
            PanelKonfiguracijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelKonfiguracijaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelKonfiguracijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        PanelKonfiguracijaLayout.setVerticalGroup(
            PanelKonfiguracijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelKonfiguracijaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Evidencija studenata pomoƒáu ƒçitaƒça kartica"));

        atfBrojIskaznice.setDisabledTextColor(new java.awt.Color(0, 51, 255));
        atfBrojIskaznice.setEnabled(false);

        atfIme.setDisabledTextColor(new java.awt.Color(0, 51, 255));
        atfIme.setEnabled(false);

        atfPrezime.setDisabledTextColor(new java.awt.Color(0, 51, 255));
        atfPrezime.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Broj iskaznice");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Ime studenta");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Prezime studenta");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(atfIme, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atfBrojIskaznice, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atfPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(247, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atfBrojIskaznice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atfIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atfPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        jTextFieldCitacKartice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldCitacKarticeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCitacKarticeFocusLost(evt);
            }
        });
        jTextFieldCitacKartice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCitacKarticeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jTextFieldCitacKartice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextFieldCitacKartice, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Evidentirani studenti"));

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton3.setText("Vrati se na konfiguraciju");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Obri≈°i odabranog studenta iz liste");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelEvidencijaLayout = new javax.swing.GroupLayout(PanelEvidencija);
        PanelEvidencija.setLayout(PanelEvidencijaLayout);
        PanelEvidencijaLayout.setHorizontalGroup(
            PanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelEvidencijaLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29))
            .addGroup(PanelEvidencijaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PanelEvidencijaLayout.setVerticalGroup(
            PanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEvidencijaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(240, 240, 240))
        );

        jLayeredPane2.setLayer(PanelKonfiguracija, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(PanelEvidencija, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelKonfiguracija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(PanelEvidencija, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelKonfiguracija, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(PanelEvidencija, javax.swing.GroupLayout.PREFERRED_SIZE, 424, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTabbedPane1.addTab("Evidencija Studenata", jPanel5);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Sekcija Termin predavanja"));

        jButton6.setText("Prikaz studenata po terminu");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton5.setText("Unos termina");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton9.setText("Brisanje termina");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton6)
                .addGap(60, 60, 60)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Osnovni podatci "));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel24.setText("Ime:");

        jLabel25.setBackground(new java.awt.Color(0, 0, 153));
        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 153));

        jLabel26.setBackground(new java.awt.Color(0, 0, 153));
        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 153));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel27.setText("Prezime:");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel28.setText("Email:");

        jLabel29.setBackground(new java.awt.Color(0, 0, 153));
        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 153));

        jLabel30.setBackground(new java.awt.Color(0, 0, 153));
        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 153));

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel31.setText("Status:");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 683, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(214, 214, 214)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(27, 27, 27)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap(215, Short.MAX_VALUE)))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(27, 27, 27)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(21, 21, 21)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap(28, Short.MAX_VALUE)))
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Odjava"));

        jButton7.setText("Odjava");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Termin i Profil", jPanel6);

        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Studenti po kolegiju"));

        jList4.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList4.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList4ValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(jList4);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane8.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                    .addComponent(jScrollPane7))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pregled studenata po kolegiju", jPanel26);

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Ukupno prisustvo studenta po kolegiju"));

        jList5.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList5.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList5ValueChanged(evt);
            }
        });
        jScrollPane9.setViewportView(jList5);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane10.setViewportView(jTable5);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addComponent(jScrollPane9))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pregled dolazaka", jPanel21);

        javax.swing.GroupLayout PanelProfesorLayout = new javax.swing.GroupLayout(PanelProfesor);
        PanelProfesor.setLayout(PanelProfesorLayout);
        PanelProfesorLayout.setHorizontalGroup(
            PanelProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
        );
        PanelProfesorLayout.setVerticalGroup(
            PanelProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/POZADINA.png"))); // NOI18N
        jLabel15.setText("\n");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "O aplikaciji"));

        jLabel18.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 9)); // NOI18N
        jLabel18.setText("                                                              Veleuƒçili≈°te u Rijeci                                                                   ");

        jLabel32.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 9)); // NOI18N
        jLabel32.setText("                                                             Poslovni odjel\n                                                                 ");

        jLabel33.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 9)); // NOI18N
        jLabel33.setText("           Specijalistiƒçki diplomski struƒçni studij Informacijske tehnologije u poslovnim sustavima  ");

        jLabel34.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 9)); // NOI18N
        jLabel34.setText("Aplikacija je izraƒëena u sklopu specijalistiƒçkog  zavr≈°nog rada iz kolegija\n\"Izgradnja objektno orijentiranih aplikacija\".  ");

        jLabel35.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 9)); // NOI18N
        jLabel35.setText("            Mentor: Dr.sc. Ivan Pogarƒçiƒá                                                             \t\t\t  Student: Ivan Peri≈°a");

        jLabel36.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 9)); // NOI18N
        jLabel36.setText("na SQL bazu podataka. Aplikacija je namjenjena profesoru za evidenciju studenata i administratoru za osnovne operacije.");

        jLabel37.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 9)); // NOI18N
        jLabel37.setText("Namjena aplikacije je lak≈°e evidentiranje studentskih prisutnosti, u ovom sluƒçaju preko ƒçitaƒça kartica. Aplikacija je spojena\n");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addGap(3, 3, 3)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36)
                .addGap(18, 18, 18)
                .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton16.setText("Natrag");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelONamaLayout = new javax.swing.GroupLayout(PanelONama);
        PanelONama.setLayout(PanelONamaLayout);
        PanelONamaLayout.setHorizontalGroup(
            PanelONamaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelONamaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelONamaLayout.setVerticalGroup(
            PanelONamaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelONamaLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        jLayeredPane1.setLayer(PanelPocetna, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(PanelAdmin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(PanelProfesor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(PanelONama, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPocetna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(PanelAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(PanelProfesor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(PanelONama, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(PanelPocetna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(PanelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(PanelProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(PanelONama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    UsersController controller = new UsersController();
    TerminController controller1 = new TerminController();
    SQLController controllerSQL = new SQLController();
    EvidencijaController controllerEvidencija = new EvidencijaController();
    StudentNaKolegijuController controllerStudent = new StudentNaKolegijuController();
    KolegijController controllerKolegij = new KolegijController();
    
    boolean dopustenoCitanje;
    String vrstaPredavanja;
    
    DefaultListModel model=new DefaultListModel();
    DefaultListModel model1=new DefaultListModel(); 
    DefaultListModel model2=new DefaultListModel();
    
    /**
     *
     */
    public void predavanje(){
    
        if("Predavanje".equals(controller1.getOdabranaVrstaPredavanja())){       
            vrstaPredavanja="P";
            
        }else if("Seminar".equals(controller1.getOdabranaVrstaPredavanja())){
            vrstaPredavanja="S";
        
        }else if("Vjezbe".equals(controller1.getOdabranaVrstaPredavanja())){
            vrstaPredavanja="V";
        
        }
    }
    
    public void preuzimanjeKoelgijaOdProfesora(int id) {
        
        cmbKolegiji.removeAllItems();
        List<Kolegij> lista;
        

        try {
            lista = (List<Kolegij>) controller.listaKolegijaOdProfesora(id);
            lista.stream().forEach((i) -> {
                cmbKolegiji.addItem(i);
            });
            System.out.println("DEBUG|GlavniIzbornik|PanelProfesor|preuzimanjeSvihKolegijaOdProfesora|USPJESAN");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gre≈°ka"+e, "Kritiƒçna Gre≈°ka", JOptionPane.ERROR_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|PanelProfesor|preuzimanjeSvihKolegijaOdProfesora|Exception|" + e.toString());
            return;
        }

        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Niste nositelj niti jednog kolegija!!!!.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|PanelProfesor|preuzimanjeSvihKolegijaOdProfesora|Prazna lista");
        }
    }
     
    private void preuzimanjeTerminaPoKolegiju(int id) {
        
        cmbTermin.removeAllItems();
        List<Termin> lista;
        

        try {
            lista = (List<Termin>) controller1.listaTerminaPoKolegiju(id);
            
            lista.stream().forEach((i) -> {
                cmbTermin.addItem(i);
            });
            System.out.println("DEBUG|GlavniIzbornik|PanelProfesor|preuzimanjeTerminaPoKolegiju|USPJESAN");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gre≈°ka"+e, "Kritiƒçna Gre≈°ka", JOptionPane.ERROR_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|PanelProfesor|preuzimanjeTerminaPoKolegiju|Exception|" + e.toString());
            return;
        }

        if (lista.isEmpty()) {
            //JOptionPane.showMessageDialog(this, "Nema termina za taj kolegij!!!!.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|PanelProfesor|preuzimanjeTerminaPoKolegiju|Prazna lista|Nema termina za taj kolegij");
        }
    }
    
    private void preuzimanjeTermina(int id,JComboBox cmb) {
        
        cmb.removeAllItems();
        List<Termin> lista;
        

        try {
            lista = (List<Termin>) controller1.listaTerminaPoKolegiju(id);
            
            lista.stream().forEach((i) -> {
                cmb.addItem(i);
            });
            System.out.println("DEBUG|GlavniIzbornik|preuzimanjeTerminaPoKolegiju|USPJESAN");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gre≈°ka"+e, "Kritiƒçna Gre≈°ka", JOptionPane.ERROR_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|preuzimanjeTerminaPoKolegiju|Exception|" + e.toString());
            return;
        }

        if (lista.isEmpty()) {
            //JOptionPane.showMessageDialog(this, "Nema termina za taj kolegij!!!!.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|preuzimanjeTerminaPoKolegiju|Prazna lista|Nema termina za taj kolegij");
        }
    }
    
     private void preuzimanjeSvihKolegija() {
        System.out.println("DEBUG|GlavniIzbornik|preuzimanjeSvihKolegija|ADMIN");
        cmbKolegijiAdmin.removeAllItems();
        List<Kolegij> lista;

        try {
            lista = (List<Kolegij>) controllerKolegij.listaKolegija();
            lista.stream().forEach((i) -> {
                cmbKolegijiAdmin.addItem(i);
            });
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gre≈°ka broj 1", "Kritiƒçna Gre≈°ka", JOptionPane.ERROR_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|preuzimanjeSvihKolegija|Exception|" + e.toString());
            return;
        }

        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nijedan kolegij nije pronaƒëen.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
            System.out.println("DEBUG|ProzorCRUDKolegija|preuzimanjeSvihKolegija|Prazna lista");
        }
    }
     
    public void otvoriPrivilegijeProfesora(){
        PanelAdmin.setVisible(false);
        PanelPocetna.setVisible(false);
        PanelONama.setVisible(false);
        PanelProfesor.setVisible(true);
        PanelEvidencija.setVisible(false);

        jTabbedPane1.setSelectedIndex(0);
        PanelKonfiguracija.setVisible(true);
        PanelEvidencija.setVisible(false);
        
        odaberiKolegijProfesora((JList)jList4,controller.korisnik.getSifra_korisnika());
        odaberiKolegijProfesora((JList)jList5,controller.korisnik.getSifra_korisnika());
    }
    
    public void otvoriONama(){
        PanelAdmin.setVisible(false);
        PanelPocetna.setVisible(false);
        PanelProfesor.setVisible(false);
        PanelONama.setVisible(true);
    }
    
    public void otvoriPrivilegijeAdmina(){
        PanelAdmin.setVisible(true);
        PanelPocetna.setVisible(false);
        PanelProfesor.setVisible(false);
        
        preuzimanjeSvihKolegija();
        odaberiProfesora((JList)jList3);
        odaberiKolegij((JList)jList2);
    }

    private void otvoriPocetnu(){
        PanelAdmin.setVisible(false);
        PanelPocetna.setVisible(true);
        PanelProfesor.setVisible(false);
        PanelONama.setVisible(false);
        PanelEvidencija.setVisible(false);
        tfKorisnickoIme.setText("");
        tfLozinka.setText("");
    
    }
    
    public boolean isUredjajSpojen() {
        
        boolean uredjajSpojen = false;
        
        com.codeminders.hidapi.ClassPathLibraryLoader.loadNativeHIDLibrary();

        HIDDeviceInfo[] devices = null;

        try {
            devices = HIDManager.getInstance().listDevices();
            
            for (HIDDeviceInfo deviceInfo : devices) {
                if (deviceInfo.getVendor_id() == 49686) {
                    uredjajSpojen = true;
                }
            }
        } catch (Exception e) {
            System.out.println("DEBUG|GlavniIzbornik|isUredjajSpojen|" + e.toString());
        }

        return uredjajSpojen;
    }
    
    public void otvoriKonfiguraciju(){
        cmbKolegiji.setEnabled(true);
        cmbTermin.setEnabled(true);
        jRadioButtonKPredavanje.setEnabled(true);
        jRadioButtonKSeminar.setEnabled(true);
        jRadioButtonKVjezbe.setEnabled(true);
        jButtonKPotvrdi.setEnabled(true);

    }
    
    private void dopustiCitanjeKartice() {
        if (isUredjajSpojen()) {
        dopustenoCitanje = true;
        jTextFieldCitacKartice.setVisible(true);
        jTextFieldCitacKartice.setEditable(true);
        jTextFieldCitacKartice.requestFocus();

        
        System.out.println("DEBUG|GlavniIzbornik|dopustiCitanjeKartice|Spreman za novi unos.");
        } else {
            System.out.println("DEBUG|GlavniIzbornik|Ureƒëaj nije spojen");
            JOptionPane.showMessageDialog(this, "Ureƒëaj nije spojen", "Upozorenje", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void onemoguciCitanjeKartice() {
        dopustenoCitanje = false;
        jTextFieldCitacKartice.setVisible(false);
        jTextFieldCitacKartice.setEditable(false);
        System.out.println("DEBUG|GlavniIzbornik|onemoguciCitanjeKartice");
    }
    
    private void obradiProcitanePodatke() {
        String procitano = jTextFieldCitacKartice.getText();
        System.out.println("DEBUG|GlavniIzbornik|obradiProcitanePodatke|Procitano " + procitano);

        String nositeljIskaznice = "";
        String brojIskaznice = "";

        boolean odvajateljPronadjen = false;

        for (char c : procitano.toCharArray()) {
            if (!odvajateljPronadjen) {
                if ((c != '%') && (c != 'B') && (c != '^')) {
                    brojIskaznice += c;
                    System.out.println("Broj iskaznice :"+brojIskaznice);
                }

                if (c == '^') {
                    odvajateljPronadjen = true;
                    continue;
                }
            }

            if (odvajateljPronadjen) {
                if (c != '^') {
                        
                    nositeljIskaznice += c;
                    System.out.println("Nositelj iskaznice :"+nositeljIskaznice);
                } else {
                    break;
                }
            }
        }

        if (nositeljIskaznice.isEmpty() || brojIskaznice.isEmpty()) {
            neuspjesnoCitanje();
            System.out.println("DEBUG|GlavniIzbornik|obradiProcitanePodatke|Nositelj iskaznice ili njen broj je prazan");
            
        } else {
            String[] nazivStudenta;
            String prezimeStudenta;
            String imeStudenta;
            try{
                nazivStudenta = nositeljIskaznice.split("/");
                prezimeStudenta = nazivStudenta[0];
                imeStudenta = nazivStudenta[1];
                prezimeStudenta = prezimeStudenta.trim();
                imeStudenta = imeStudenta.trim();
                
                uspjesnoCitanje(imeStudenta, prezimeStudenta, brojIskaznice);
                System.out.println("DEBUG|GlavniIzbornik|obradiProcitanePodatke|Uspjesno citanje");
            } catch (Exception f) {
                neuspjesnoCitanje();
                System.out.println("DEBUG|GlavniIzbornik|obradiProcitanePodatke|Neuspjesno citanje"+f.toString());
            }
        }
    }

    private void neuspjesnoCitanje() {
        System.out.println("DEBUG|GlavniIzbornik|neuspjesnoCitanje");
        JOptionPane.showMessageDialog(this, "Neuspje≈°no ƒçitanje iskaznice.", "Obavijest", JOptionPane.WARNING_MESSAGE);
        atfBrojIskaznice.setText("Neuspje≈°no ƒçitanje iskaznice");
        atfIme.setText("Neuspje≈°no ƒçitanje iskaznice");
        atfPrezime.setText("Neuspje≈°no ƒçitanje iskaznice");

        jTextFieldCitacKartice.setText("");
        dopustiCitanjeKartice();
    }

    private void uspjesnoCitanje(String ime, String prezime, String brojIskaznice) throws Exception {
        System.out.println("DEBUG|GlavniIzbornik|uspjesnoCitanje|Broj iskaznice: " + brojIskaznice);
        System.out.println("DEBUG|GlavniIzbornik|uspjesnoCitanje|Prezime nositelja: " + prezime);
        System.out.println("DEBUG|GlavniIzbornik|uspjesnoCitanje|Ime nositelja: " + ime);

        
        atfBrojIskaznice.setText(brojIskaznice);
        atfIme.setText(ime);
        atfPrezime.setText(prezime);
        Kolegij odabrani = (Kolegij)cmbKolegiji.getSelectedItem();
        int sifra_kolegija = odabrani.getSifra_kolegija();
        
        Termin odabraniTermin = (Termin)cmbTermin.getSelectedItem();
        int sifra_termina = odabraniTermin.getSifra_termina();
        predavanje();
   
            if (controller.provjeriUpisStudentaNaKolegiju(brojIskaznice, sifra_kolegija)==1) {
                
                if (controller.provjeriEvidencijuZaStudenta(brojIskaznice, sifra_kolegija,sifra_termina)==0){
                    
                    StudentNaKolegiju StuNaKol = controller.dohvatiCijelogStudentaNaKolegiju(brojIskaznice, sifra_kolegija);
               
                    Evidencija noviZapis = new Evidencija(StuNaKol.getSifra_studenta_na_kolegiju(),vrstaPredavanja, sifra_termina, 1);

                    if (controllerEvidencija.storeEvidencija(noviZapis)) {
                       
                        System.out.println("DEBUG|GlavniIzbornik|uspjesnoCitanje|SpremanjeUnosaEvidencije|Uspjeh");
                        atfBrojIskaznice.setText("Student evidentiran");
                        atfIme.setText(""+ime);
                        atfPrezime.setText(""+prezime);
                        JList listModel = new JList();
                         listModel.setModel(new DefaultListModel());
                         DefaultListModel model = (DefaultListModel)listModel.getModel();
                       // DefaultListModel listModel = (DefaultListModel) jList1.getModel();
                        model.removeAllElements();
                        prikaziEvidentiraneStudenteZaZadaniTermin();
                        
                    } else {
                        System.out.println("DEBUG|GlavniIzbornik|uspjesnoCitanje|SpremanjeUnosaEvidencije|Neuspjeh");
                        JOptionPane.showMessageDialog(this, "Neuspje≈°no spremanje evidencije.", "Obavijest", JOptionPane.WARNING_MESSAGE);
                    }
                }
                else {
                    Evidencija evidencija = controllerEvidencija.dohvatiEvidencijuZaStudenta(brojIskaznice, sifra_kolegija, sifra_termina);
                    
                    if(evidencija.getPrisutnost()==0){
                      System.out.println("DEBUG|GlavniIzbornik|uspjesnoCitanje|EvidencijaZabiljezenogStudenta=0|UlazakUPetljuIF");
                      
                        if(JOptionPane.showConfirmDialog(null,"STUDENT : "+ime+" "+prezime+" je veƒá evidentiran kao odsutan.\n ≈Ωelite li studenta evidentirat kao prisutnog? ","Upozorenje!!!", JOptionPane.YES_NO_OPTION)==0){
                        
                            if (controllerEvidencija.azurirajPrisutnost(evidencija.getSifra_evidencije())) {
                       
                                System.out.println("DEBUG|GlavniIzbornik|uspjesnoCitanje|AzuriranjeEvidencije|Uspjeh");
                                atfBrojIskaznice.setText("Student ponovo evidentiran");
                                atfIme.setText(""+ime);
                                atfPrezime.setText(""+prezime);
                                JList listModel = new JList();
                                 listModel.setModel(new DefaultListModel());
                                 DefaultListModel model = (DefaultListModel)listModel.getModel();
                               // DefaultListModel listModel = (DefaultListModel) jList1.getModel();
                                model.removeAllElements();
                                prikaziEvidentiraneStudenteZaZadaniTermin();

                            } else {
                                System.out.println("DEBUG|GlavniIzbornik|uspjesnoCitanje|AzuriranjeEvidencije|Neuspjeh");
                                JOptionPane.showMessageDialog(this, "Neuspje≈°no a≈æuriranje evidencije.", "Obavijest", JOptionPane.WARNING_MESSAGE);
                            }
                            
                        }
                        
                       }else
                    atfBrojIskaznice.setText("Student veƒá evidentiran");
                    atfIme.setText(""+ime);
                    atfPrezime.setText(""+prezime);
                    System.out.println("DEBUG|GlavniIzbornik|uspjesnoCitanje|ProvjeraUnosa|Evidentiran");
               }
            } else {
                System.out.println("DEBUG|GlavniIzbornik|uspjesnoCitanje|provjeriUpisStudentaNaKolegiju|Student nije upisan na kolegij");
                //JOptionPane.showMessageDialog(this, "Student nije upisan.", "Obavijest", JOptionPane.WARNING_MESSAGE);
                atfBrojIskaznice.setText("Student nije upisan");
                atfIme.setText(""+ime);
                atfPrezime.setText(""+prezime);
            }
                
        
            jTextFieldCitacKartice.setText("");
        dopustiCitanjeKartice();
    }
     
    private void prikaziEvidentiraneStudenteZaZadaniTermin() {
       model.clear();

        Kolegij odabraniKolegij = (Kolegij) cmbKolegiji.getSelectedItem();
        Termin odabraniTermin = (Termin) cmbTermin.getSelectedItem();
        
        int sifra_kolegija = odabraniKolegij.getSifra_kolegija();
        int sifra_termina = odabraniTermin.getSifra_termina();
        
        ArrayList<Users> lista;

        try {
            lista = (ArrayList<Users>) controller.listaEvidentiranihStudenata(sifra_termina, sifra_kolegija);
            for (Users korisnik: lista){
                model.addElement(korisnik);
                jList1.setModel(model);
            }
        } catch (Exception f) {
            System.out.println("DEBUG|GlavniIzbornik|prikaziEvidentiraneStudenteZaZadaniTermin|Greska "+f.toString());
            JOptionPane.showMessageDialog(this,"Gre≈°ka\n" + f, "Gre≈°ka kod dohvaƒáanja studenata za zadani temin", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (lista.isEmpty()) {
            System.out.println("DEBUG|GlavniIzbornik|prikaziEvidentiraneStudenteZaZadaniTermin|ListaPrazna|Nema zabiljezeni evidencija studenata za zadani termin ");
            //JOptionPane.showMessageDialog(this,"Nema nijednog studenta za zadani temin", "Obavijest", JOptionPane.PLAIN_MESSAGE);
        }
    }
     
    private void prikaziAStudenteUTablici(JComboBox kolegij,JComboBox termin) throws Exception {
        String[] zaglavlje ={"#","Prezime","Ime","Broj iskaznice","Email"};
        Vector zaglavljeTablice = new Vector(Arrays.asList(zaglavlje));
        Vector popuniTablicu = new Vector();
       
        
        Kolegij odabraniKolegij = (Kolegij) kolegij.getSelectedItem();
        Termin odabraniTermin = (Termin) termin.getSelectedItem();
        
        int sifra_kolegija = odabraniKolegij.getSifra_kolegija();
        int sifra_termina = odabraniTermin.getSifra_termina();
        
       
        ArrayList<Users> lista;
 
        lista = (ArrayList<Users>) controller.listaEvidentiranihStudenata(sifra_termina, sifra_kolegija);
        
        int brojac =0;
        for (Users korisnik : lista){
            brojac++;
         Vector popuni = new Vector();
         popuni.addElement(brojac);
         popuni.addElement(korisnik.getPrezime());
         popuni.addElement(korisnik.getIme());
         popuni.addElement(korisnik.getBroj_iskaznice());
         popuni.addElement(korisnik.getEmail());
         popuniTablicu.add(popuni);
        
        }
        
        //lista.stream().map((korisnik) -> new Vector(Arrays.asList(korisnik.getPrezime(),korisnik.getIme(),korisnik.getBroj_iskaznice(),korisnik.getEmail()))).forEach(popuniTablicu::add);
        
        TableModel novi = new DefaultTableModel(popuniTablicu, zaglavljeTablice);
        System.out.println("DEBUG|GlavniIzbornik|popuniTablicu| "+popuniTablicu);
        jTable1.setModel(novi);
    
    }
     
    private void odaberiKolegij(JList<Kolegij> listaKolegija) {
       model.clear();
        ArrayList<Kolegij> lista;

        try {
            lista = (ArrayList<Kolegij>) controllerKolegij.listaKolegija();
            for (Kolegij kolegij: lista){
                model.addElement(kolegij);
                listaKolegija.setModel(model);
            }
        } catch (Exception f) {
            JOptionPane.showMessageDialog(this,"Gre≈°ka\n" + f, "Gre≈°ka kod dohvaƒáanja kolegija", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this,"Nema kolegija u Bazi podataka", "Obavijest", JOptionPane.PLAIN_MESSAGE);
        }
    }
     
    private void odaberiProfesora(JList<Users> listaProfesora) {
       model1.clear();
        ArrayList<Users> lista;

        try {
            lista = (ArrayList<Users>) controller.listaProfesora();
            for (Users korisnik: lista){
                model1.addElement(korisnik);
                listaProfesora.setModel(model1);
            }
        } catch (Exception f) {
            JOptionPane.showMessageDialog(this,"Gre≈°ka\n" + f, "Gre≈°ka kod dohvaƒáanja profesora", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this,"Nema profesora u Bazi podataka", "Obavijest", JOptionPane.PLAIN_MESSAGE);
        }
    }
    
    private void odaberiKolegijProfesora(JList<Kolegij> listaKolegija,int id) {
       model2.clear();
        ArrayList<Kolegij> lista;

        try {
            lista = (ArrayList<Kolegij>) controllerKolegij.listaKolegijaProfesora(id);
            for (Kolegij kolegij: lista){
                model2.addElement(kolegij);
                listaKolegija.setModel(model2);
            }
        } catch (Exception f) {
            JOptionPane.showMessageDialog(this,"Gre≈°ka\n" + f, "Gre≈°ka kod dohvaƒáanja kolegija", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this,"Niste nositelj niti jednog kolegija", "Obavijest", JOptionPane.PLAIN_MESSAGE);
        }
    }
    
    private void prikaziStudenteNaKolegiju(JList list,JTable tablica,DefaultListModel m) throws Exception {
         String[] zaglavlje ={"#","Prezime","Ime","Broj iskaznice","Email"};
        Vector zaglavljeTablice = new Vector(Arrays.asList(zaglavlje));
        Vector popuniTablicu = new Vector();
        
        ArrayList<Users> lista;

        int index = list.getSelectedIndex();
        Kolegij odabrani=(Kolegij) m.get(index);

        lista = (ArrayList<Users>) controllerStudent.listaStudenata(odabrani.getSifra_kolegija());
        int brojac =0;
        for (Users korisnik : lista){
            brojac++;
         Vector popuni = new Vector();
         popuni.addElement(brojac);
         popuni.addElement(korisnik.getPrezime());
         popuni.addElement(korisnik.getIme());
         popuni.addElement(korisnik.getBroj_iskaznice());
         popuni.addElement(korisnik.getEmail());
         popuniTablicu.add(popuni);
        
        }
    
        
         /*lista.stream().map((kolegij) -> new Vector(Arrays.asList(kolegij.getPrezime(),kolegij.getIme(),kolegij.getBroj_iskaznice(),kolegij.getEmail()))).forEach( (prodiKrozListu)-> {
             popuniTablicu.add(prodiKrozListu);
         });*/
         
         TableModel novi = new DefaultTableModel(popuniTablicu, zaglavljeTablice);
         tablica.setModel(novi);
    
    } 
     
    private void prikaziEvidencijuStudentaPoKolegiju(JList list,JTable tablica,DefaultListModel m) throws Exception {
         String[] zaglavlje ={"#","Prezime","Ime","Prisutnost","Postotak"};
        Vector zaglavljeTablice = new Vector(Arrays.asList(zaglavlje));
        Vector popuniTablicu = new Vector();
        
        ArrayList<Users> lista;

        int index = list.getSelectedIndex();
        Kolegij odabrani=(Kolegij) m.get(index);

        int ukupanBrojTermina = controller.ukupanBrojTerminaPoKolegiju(odabrani.getSifra_kolegija());
        lista = (ArrayList<Users>) controller.listaStudenataKolegija(odabrani.getSifra_kolegija());
        int brojac =0;
        for (Users korisnik : lista){
            int brojPrisustvaStudenta = controller.ukupanBrojPrisustvaKorisnika(odabrani.getSifra_kolegija(), korisnik.getSifra_korisnika());
            brojac++;
            float a = (float)brojPrisustvaStudenta;
            float b = (float)ukupanBrojTermina;
            float postotak =(a/b)*100;
            String result = String.format("%.2f", postotak);
         Vector popuni = new Vector();
         popuni.addElement(brojac);
         popuni.addElement(korisnik.getPrezime());
         popuni.addElement(korisnik.getIme());
         //popuni.addElement(korisnik.getBroj_iskaznice());
         //popuni.addElement(korisnik.getEmail());
         popuni.addElement(brojPrisustvaStudenta+"/"+ukupanBrojTermina);
         popuni.addElement(result+" %");
         popuniTablicu.add(popuni);
        
        }
         TableModel novi = new DefaultTableModel(popuniTablicu, zaglavljeTablice);
         tablica.setModel(novi);
    
    } 
    
    private void prikaziKolegijeProfesora(JList list,JTable tablica) throws Exception {
         String[] zaglavlje ={"Sifra kolegija","Naziv"};
        Vector zaglavljeTablice = new Vector(Arrays.asList(zaglavlje));
        Vector popuniTablicu = new Vector();

        ArrayList<Kolegij> lista;

        int index = list.getSelectedIndex();
        Users odabrani=(Users) model1.get(index);

        lista = (ArrayList<Kolegij>) controllerKolegij.listaKolegijaProfesora(odabrani.getSifra_korisnika());

         lista.stream().map((kolegij) -> new Vector(Arrays.asList(kolegij.getSifra_kolegija(),kolegij.getNaziv()))).forEach((prodiKrozListu) -> {
             popuniTablicu.add(prodiKrozListu);
         });

         TableModel novi = new DefaultTableModel(popuniTablicu, zaglavljeTablice);
         tablica.setModel(novi);
    
    } 
    int profesor;
	
    public void setProfesor(int profesor){
        this.profesor=profesor;
    }
	
    public int IDProfesora(){
        return profesor;
    }
     
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
        String ime = tfKorisnickoIme.getText();
        String lozinka = tfLozinka.getText();
            
        ime = ime.trim();
        lozinka = lozinka.trim();

        boolean provjera;
        int razinaPrava ;
        
         if (ime.equals("") || lozinka.equals("")) {
            JOptionPane.showMessageDialog(this,"Niste ispravno unijeli korisniƒçko ime i lozinku.","Upozorenje",JOptionPane.WARNING_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|prijava|KorisnickoImeILILozinkaPrazni");
            return;
        }

        try {
  
            provjera = controller.provjeriValjanostpodataka(ime, lozinka);
            System.out.println("DEBUG|Prijava|Provjera|"+provjera);

            if (provjera == true) {
                
                
                controller.korisnik = controller.dohvatiCijelogKorisnika(ime, lozinka);
                System.out.println("DEBUG|Prijava|IspisiCijelogKorisnika|"+controller.korisnik);
                
                int razina = controller.korisnik.getRazinaPrava();
                
                if(razina==1){
                    
                String ime1 = controller.korisnik.getIme();
                jLabel20.setText(""+ime1);
                
                String prezime1 = controller.korisnik.getPrezime();
                jLabel21.setText(""+prezime1);
                
                String email1 = controller.korisnik.getEmail();
                jLabel22.setText(""+email1);
                
                jLabel23.setText("Administrator");
                
                }else if(razina==2){
                    
                String ime1 = controller.korisnik.getIme();
                jLabel25.setText(""+ime1);
                
                String prezime1 = controller.korisnik.getPrezime();
                jLabel26.setText(""+prezime1);
                
                String email1 = controller.korisnik.getEmail();
                jLabel29.setText(""+email1);
                
                jLabel30.setText("Profesor");
                } 
                
                razinaPrava = controller.korisnik.getRazinaPrava();
                System.out.println("DEBUG|Prijava|IspisiRazinuPrava|"+razinaPrava);

                //Razina kupca
                if (razinaPrava == 1) {
                    
                    //JOptionPane.showMessageDialog(this, "ƒåestitamo " + ime + "\nUspje≈°no ste se logirali\n","Autentifikacija", JOptionPane.PLAIN_MESSAGE);
                    otvoriPrivilegijeAdmina();
                    System.out.println("DEBUG|GlavniIzbornik|RazinPrava|Uspje≈°anUlazakUSuƒçeljeAdmina");

                } else if (razinaPrava == 2) {
                    
                    otvoriPrivilegijeProfesora();
                    //Stvaranje set metode kako bi se mogla u Dijalogu dohvatit sifra profesor
                   controller.setSifra(controller.korisnik.getSifra_korisnika());
                    System.out.println("DEBUG|SET METODA-SIFRA PROFESORA|"+controller.sifra);
                    controller.korisnik.setSifra_korisnika(controller.korisnik.getSifra_korisnika());
                    setProfesor(controller.korisnik.getSifra_korisnika());
                    System.out.println("DEBUG|GlavniIzbornik|RazinPrava|Uspje≈°anUlazakUSuƒçeljeProfesora");

                }
                
            }else if (provjera == false) {
                System.out.println("DEBUG|GlavniIzbornik|ProvjeraFale|PodatciNetocniZaPrijavuUSustavs");
                JOptionPane.showMessageDialog(this, "Korisiƒçko ime ili lozinka nisu toƒçni \nPoku≈°ajte ponovo\n","Autentifikacija", JOptionPane.ERROR_MESSAGE);
                //tfKorisnickoIme.setText("");
                tfLozinka.setText("");
                
            }
        
        } catch (Exception f) {
            System.out.println("DEBUG|GlavniIzbornik|Prijava|Greska| "+f.toString());
            JOptionPane.showMessageDialog(this, "Obratite se administratoru.\nGre≈°ka Main\n" + f.toString(),"Gre≈°ka kod logiranja", JOptionPane.ERROR_MESSAGE);
            tfKorisnickoIme.setText("");
            tfLozinka.setText("");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbKolegijiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbKolegijiItemStateChanged
        Kolegij odabrani = (Kolegij) cmbKolegiji.getSelectedItem();
        
        preuzimanjeTerminaPoKolegiju(odabrani.getSifra_kolegija());
        
    }//GEN-LAST:event_cmbKolegijiItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.out.println("DEBUG|GlavniIzbornik|jButtonKTestStatusaBazeIUredajaActionPerformed");
        boolean baza = false;
        boolean uredjaj = false;

        //Provjera povezanosti s bazom
        if (controllerSQL.isBazaSpojena()) {
            baza = true;
            jLabelStatusKBazePodataka.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/databaseOn.png")));
            System.out.println("DEBUG|GlavniIzbornik|jButtonKTestStatusaBazeIUredajaActionPerformed|Database On");
        } else {
            jLabelStatusKBazePodataka.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pristup/d/img/databaseOff.png")));
            System.out.println("DEBUG|GlavniIzbornik|jButtonKTestStatusaBazeIUredajaActionPerformed|Database Off");
        }

        //Provjera povezanosti s citacem
        if (isUredjajSpojen()) {
            uredjaj = true;
            jLabelKStatusUredaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/cardOn.png")));
            System.out.println("DEBUG|GlavniIzbornik|jButtonKTestStatusaBazeIUredajaActionPerformed|Card Reader On");
        } else {
            jLabelKStatusUredaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/cardOff.png")));
            System.out.println("DEBUG|GlavniIzbornik|jButtonKTestStatusaBazeIUredajaActionPerformed|Card Reader Off");
            JOptionPane.showMessageDialog(this, "Ureƒëaj nije spojen", "Upozorenje", JOptionPane.WARNING_MESSAGE);
        }

        //if(baza && uredjaj)
        if (baza && uredjaj) {
            System.out.println("DEBUG|GlavniIzbornik|jButtonKTestStatusaBazeIUredajaActionPerformed|Baza i ureƒëaj spojeni");
            //int sifra = controller.korisnik.getSifra_korisnika();
            //preuzimanjeKoelgijaOdProfesora(sifra);

          otvoriKonfiguraciju();
          preuzimanjeKoelgijaOdProfesora(controller.korisnik.getSifra_korisnika());
          dopustiCitanjeKartice();
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldCitacKarticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCitacKarticeActionPerformed
        System.out.println("DEBUG|GlavniIzbornik|jTextFieldCitacKarticeActionPerformed");
        if (dopustenoCitanje) {
            System.out.println("DEBUG|GlavniIzbornik|jTextFieldCitacKarticeActionPerformed|Citanje dopusteno");
            //jLabelEStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pristup/d/img/working.png")));
            onemoguciCitanjeKartice();
            obradiProcitanePodatke();
        }
    }//GEN-LAST:event_jTextFieldCitacKarticeActionPerformed

    private void jTextFieldCitacKarticeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCitacKarticeFocusLost
        System.out.println("DEBUG|GlavniIzbornik|jTextFieldCitacKarticeFocusLost");
        jTextFieldCitacKartice.getInputContext().selectInputMethod(new Locale("hr", "HR"));
        if (dopustenoCitanje) {
            System.out.println("DEBUG|GlavniIzbornik|jTextFieldCitacKarticeFocusLost|Citanje dopusteno");
            jTextFieldCitacKartice.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldCitacKarticeFocusLost

    private void jTextFieldCitacKarticeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCitacKarticeFocusGained
       System.out.println("DEBUG|GlavniIzbornik|jTextFieldCitacKarticeFocusGained");
       jTextFieldCitacKartice.getInputContext().selectInputMethod(new Locale("en", "US"));
    }//GEN-LAST:event_jTextFieldCitacKarticeFocusGained

    private void jButtonKPotvrdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKPotvrdiActionPerformed
        try {
            System.out.println("DEBUG|GlavniIzbornik|jButtonKPotvrdiActionPerformed");
            
            
            
            if (cmbKolegiji.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(this, "Kolegij nije odabran.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
                System.out.println("DEBUG|GlavniIzbornik|jButtonKPotvrdiActionPerformed|Kolegij nije odabran");
                return;
            }
            
            if (cmbTermin.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(this, "Termin nije odabran.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
                System.out.println("DEBUG|GlavniIzbornik|jButtonKPotvrdiActionPerformed|Termin nije odabran");
                return;
            }
            
            String formatVremena = new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime());
            String formatDatuma = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
            
            Termin odabrani = (Termin) cmbTermin.getSelectedItem();
            
            Date datum = odabrani.getDatum();
            String vrijemePocetka = odabrani.getVrijemeOd();
            String vrijemeKraja = odabrani.getVrijemeDo();
            
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
            SimpleDateFormat sdfDatum = new SimpleDateFormat("yyyy-MM-dd");
            
            Date datumSistem = sdfDatum.parse(formatDatuma);
            
            Date d =sdf.parse(formatVremena);
            Date d1 = sdf.parse(vrijemePocetka);
            Date d2 = sdf.parse(vrijemeKraja);
            
            if ( datumSistem.before(datum)){
             JOptionPane.showMessageDialog(this, "DATUM ZA TAJ TERMINA JO≈† NIJE DO≈†AO\nMo≈æete unijeti samo dana≈°nji termin.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
                System.out.println("DEBUG|GlavniIzbornik|jButtonKPotvrdiActionPerformed|DATUM ZA TAJ TERMINA JO≈† NIJE DO≈†AO");
                return;}
            
             if ( datumSistem.after(datum)){
             JOptionPane.showMessageDialog(this, "DATUM ZA TAJ TERMIN JE PRO≈†AO\nMo≈æete unijeti samo dana≈°nji termin.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
                System.out.println("DEBUG|GlavniIzbornik|jButtonKPotvrdiActionPerformed|DATUM ZA TAJ TERMIN JE PRO≈†AO");
                return;}
            
            if (d.before(d1) ){
             JOptionPane.showMessageDialog(this, "PREDAVANJA JO≈† NISU POƒåELA ZA TAJ TERMIN.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
                System.out.println("DEBUG|GlavniIzbornik|jButtonKPotvrdiActionPerformed|PREDAVANJA JO≈† NISU POƒåELA ZA TAJ TERMIN");
                return;}
            
            if (d.after(d2) ){
             JOptionPane.showMessageDialog(this, "PREDAVANJA SU ZAVR≈†ILA ZA TAJ TERMIN.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
                System.out.println("DEBUG|GlavniIzbornik|jButtonKPotvrdiActionPerformed|PREDAVANJA SU ZAVR≈†ILA ZA TAJ TERMIN");
                return;}
            
            if (controller1.getOdabranaVrstaPredavanja() == null) {
                JOptionPane.showMessageDialog(this, "Vrsta predavanja nije odabrana.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
                System.out.println("DEBUG|GlavniIzbornik|jButtonKPotvrdiActionPerformed|Vrsta predavanja nije odabrana");
                return;
            }
            
            /*if (KONTROLER.getListaStudenataNaKolegiju().isEmpty() || KONTROLER.getListaStudenataNaKolegiju() == null) {
            JOptionPane.showMessageDialog(this, "Nijedan student nije upisan na kolegiju.", "Obavijest", JOptionPane.PLAIN_MESSAGE);
            System.out.println("DEBUG|GlavniIzbornik|jButtonKPotvrdiActionPerformed|Nijedan student nije upisan na kolegiju.");
            return;
            }*/
            
            //konfiguracijaPotvrdena();
            PanelEvidencija.setVisible(true);
            PanelKonfiguracija.setVisible(false);
            dopustiCitanjeKartice();
            prikaziEvidentiraneStudenteZaZadaniTermin();
        } catch (ParseException ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonKPotvrdiActionPerformed

    private void jRadioButtonKPredavanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonKPredavanjeActionPerformed
        controller1.setOdabranaVrstaPredavanja(jRadioButtonKPredavanje.getText());
        System.out.println("DEBUG|GlavniIzbornik|jRadioButtonPredavanjeActionPerformed|Postavljena vrsta predavanja " + jRadioButtonKPredavanje.getText());
    }//GEN-LAST:event_jRadioButtonKPredavanjeActionPerformed

    private void jRadioButtonKSeminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonKSeminarActionPerformed
       controller1.setOdabranaVrstaPredavanja(jRadioButtonKSeminar.getText());
        System.out.println("DEBUG|GlavniIzbornik|jRadioButtonSeminarActionPerformed|Postavljena vrsta predavanja " + jRadioButtonKSeminar.getText());
    }//GEN-LAST:event_jRadioButtonKSeminarActionPerformed

    private void jRadioButtonKVjezbeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonKVjezbeActionPerformed
        controller1.setOdabranaVrstaPredavanja(jRadioButtonKVjezbe.getText());
        System.out.println("DEBUG|GlavniIzbornik|jRadioButtonVjezbeActionPerformed|Postavljena vrsta predavanja " + jRadioButtonKVjezbe.getText());
    }//GEN-LAST:event_jRadioButtonKVjezbeActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         PanelEvidencija.setVisible(false);
         PanelKonfiguracija.setVisible(true);
         onemoguciCitanjeKartice();
         
        atfBrojIskaznice.setText("");
        atfIme.setText("");
        atfPrezime.setText("");
        
        DefaultListModel listModel = (DefaultListModel) jList1.getModel();
        listModel.removeAllElements();
         
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
 
        int index = jList1.getSelectedIndex();
        Users odabrani=(Users) model.get(index);
        System.out.println("DEBUG|GlavniIzbornik|jList|model|sifraKorisnika| "+odabrani.getSifra_korisnika());
        int sifra_korisnika=odabrani.getSifra_korisnika();
        
        Kolegij odabraniKolegij = (Kolegij)cmbKolegiji.getSelectedItem();
        int sifra_kolegija = odabraniKolegij.getSifra_kolegija();
        
        Termin odabraniTermin = (Termin)cmbTermin.getSelectedItem();
        Date datumTermina = odabraniTermin.getDatum();
    
        try {
            if(JOptionPane.showConfirmDialog(null,"Da li ste sigurni da ≈æelite obrisat studenta: "+odabrani.getIme()+" "+odabrani.getPrezime()+" s kolegija: "+odabraniKolegij.getNaziv(),"Upozorenje!!!", JOptionPane.YES_NO_OPTION)==0){
            controller.obrisiStudentaSTerminapredavanja(sifra_korisnika, datumTermina, sifra_kolegija);
            DefaultListModel listModel = (DefaultListModel) jList1.getModel();
            listModel.removeAllElements();
             prikaziEvidentiraneStudenteZaZadaniTermin();
            }
        } catch (Exception ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            
            PregledStudenataPoTerminu novi = new PregledStudenataPoTerminu(this,true);
            
            int sifra = controller.korisnik.getSifra_korisnika();
            novi.preuzimanjeKoelgijaOdProfesora(sifra);
            
             novi.setLocationRelativeTo(this);
            novi.setVisible(true);
       
        } catch (Exception ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        DialogUnosTermina prozor = new DialogUnosTermina(this, true);
        
        int sifra = controller.korisnik.getSifra_korisnika();
        prozor.preuzimanjeKoelgijaOdProfesora(sifra);
        
        prozor.setLocationRelativeTo(this);
        prozor.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        onemoguciCitanjeKartice();
        otvoriPocetnu();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
       otvoriPocetnu();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
     
    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void jPanel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel22MouseClicked
              
    }//GEN-LAST:event_jPanel22MouseClicked

    private void cmbKolegijiAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbKolegijiAdminMouseClicked
       
    }//GEN-LAST:event_cmbKolegijiAdminMouseClicked

    private void cmbKolegijiAdminItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbKolegijiAdminItemStateChanged
      Kolegij odabrani = (Kolegij) cmbKolegijiAdmin.getSelectedItem();

        preuzimanjeTermina(odabrani.getSifra_kolegija(),cmbTerminAdmin);
    }//GEN-LAST:event_cmbKolegijiAdminItemStateChanged

    private void cmbTerminAdminItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTerminAdminItemStateChanged
        try {
            prikaziAStudenteUTablici(cmbKolegijiAdmin,cmbTerminAdmin);
        } catch (Exception ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbTerminAdminItemStateChanged

    private void jList3ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList3ValueChanged
          
        try {
            prikaziKolegijeProfesora(jList3,jTable3);
        } catch (Exception ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }//GEN-LAST:event_jList3ValueChanged

    private void jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList2ValueChanged
        try {
            prikaziStudenteNaKolegiju(jList2,jTable2,model);
        } catch (Exception ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jList2ValueChanged

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        DialogUnosKolegija prozor = null;
        try {
            prozor = new DialogUnosKolegija(null,true);
        } catch (Exception ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }
         prozor.setLocationRelativeTo(this);
        prozor.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
              DialogUnosTerminaAdmin prozor = null;
        try {
            prozor = new DialogUnosTerminaAdmin(this,true);
        } catch (Exception ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }
         prozor.setLocationRelativeTo(this);
        prozor.setVisible(true);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        DialogPovezivanjeProfesoraIKolegija prozor = null;
        try {
            prozor = new DialogPovezivanjeProfesoraIKolegija(this,true);
        } catch (Exception ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }
         prozor.setLocationRelativeTo(this);
        prozor.setVisible(true);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        DialogPovezivanjeStudentaIKolegija prozor = null;
        try {
            prozor = new DialogPovezivanjeStudentaIKolegija(this,true);
        } catch (Exception ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }
         prozor.setLocationRelativeTo(this);
        prozor.setVisible(true);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        otvoriONama();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        otvoriPocetnu();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
         DialogBrisanjeTermina prozor = new DialogBrisanjeTermina(this, true);
        
        int sifra = controller.korisnik.getSifra_korisnika();
        prozor.preuzimanjeKoelgijaOdProfesora(sifra);
        
        prozor.setLocationRelativeTo(this);
        prozor.setVisible(true);   

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jList4ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList4ValueChanged
           try {
            prikaziStudenteNaKolegiju(jList4,jTable4,model2);
        } catch (Exception ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jList4ValueChanged

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        
 
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void cmbTerminAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTerminAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTerminAdminActionPerformed

    private void tfKorisnickoImeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfKorisnickoImeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfKorisnickoImeActionPerformed

    private void jPanel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel19MouseClicked
       
    }//GEN-LAST:event_jPanel19MouseClicked

    private void jTabbedPane2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane2StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane2StateChanged

    private void jList5ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList5ValueChanged
        try {
            prikaziEvidencijuStudentaPoKolegiju(jList5,jTable5,model2);
        } catch (Exception ex) {
            Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jList5ValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlavniIzbornik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlavniIzbornik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlavniIzbornik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlavniIzbornik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GlavniIzbornik().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(GlavniIzbornik.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelAdmin;
    private javax.swing.JPanel PanelEvidencija;
    private javax.swing.JPanel PanelKonfiguracija;
    private javax.swing.JPanel PanelONama;
    private javax.swing.JPanel PanelPocetna;
    private javax.swing.JPanel PanelProfesor;
    private javax.swing.JTextField atfBrojIskaznice;
    private javax.swing.JTextField atfIme;
    private javax.swing.JTextField atfPrezime;
    private javax.swing.JComboBox<Kolegij> cmbKolegiji;
    private javax.swing.JComboBox<Kolegij> cmbKolegijiAdmin;
    private javax.swing.JComboBox<Termin> cmbTermin;
    private javax.swing.JComboBox<String> cmbTerminAdmin;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonKPotvrdi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelKStatusUredaja;
    private javax.swing.JLabel jLabelStatusKBazePodataka;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JList<String> jList5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButtonKPredavanje;
    private javax.swing.JRadioButton jRadioButtonKSeminar;
    private javax.swing.JRadioButton jRadioButtonKVjezbe;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField jTextFieldCitacKartice;
    private javax.swing.JTextField tfKorisnickoIme;
    private javax.swing.JPasswordField tfLozinka;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/picture/logo.png")));
    }
}
